name: Spring Boot CI Pipeline

# Define when the workflow should run
on:
  push:
    branches:
      - main  # Run on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Run on pull requests targeting 'main'

# Define the jobs to run
jobs:
  build:

    # Set the environment to run the job (Ubuntu in this case)
    runs-on: ubuntu-latest

    # Steps involved in the pipeline
    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17 (or any version your project requires)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'  # You can set to '21' if you're using JDK 21
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies to speed up build time
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Step 4: Run Maven clean install to build the project and run tests
      - name: Build and Test with Maven
        run: mvn clean install

      # Optional: Upload test results for review
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/
